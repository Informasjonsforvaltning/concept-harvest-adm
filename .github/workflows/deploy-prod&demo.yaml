name: Deploy to production & demo

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  run-tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.7
      - name: Test
        run: go test -v -race -coverpkg=./... -coverprofile=coverage.txt -covermode=atomic ./test
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt

  build-and-deploy-production:
    needs: run-tests
    name: Deploy to prod on merge to main branch
    uses: Informasjonsforvaltning/workflows/.github/workflows/build-deploy.yaml@main
    with:
      app_name: new-harvest-admin
      caller_sha: ${{ github.sha }}
      repo: ${{ github.repository }}
      actor: ${{ github.actor }}
      environment: 'prod'
      cluster: 'digdir-fdk-prod'
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GCP_SA_DIGDIR_FDK_GCR_KEY: ${{ secrets.GCP_SA_DIGDIR_FDK_GCR_KEY }}
      DIGDIR_FDK_AUTODEPLOY: ${{ secrets.DIGDIR_FDK_PROD_AUTODEPLOY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy-to-demo:
    needs: build-and-deploy-production
    name: Deploy to demo if prod-deploy is successful
    uses: Informasjonsforvaltning/workflows/.github/workflows/deploy.yaml@main
    with:
      app_name: new-harvest-admin
      caller_sha: ${{ github.sha }}
      repo: ${{ github.repository }}
      actor: ${{ github.actor }}
      environment: 'demo'
      cluster: 'digdir-fdk-dev'
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      DIGDIR_FDK_AUTODEPLOY: ${{ secrets.DIGDIR_FDK_DEV_AUTODEPLOY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
