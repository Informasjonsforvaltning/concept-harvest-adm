openapi: 3.0.2
info:
  title: National Data Directory FDK Harvest Adm API
  description: Exposes a basic service which keeps track of data sources to be harvested.
  version: "1.0"
  contact:
    name: Digitaliseringsdirektoratet
    url: 'https://fellesdatakatalog.digdir.no'
    email: fellesdatakatalog@digdir.no
  license:
    name: License of API
    url: "http://data.norge.no/nlod/no/2.0"
tags:
  - name: dataSource
    description: Data Source Service
servers:
  - url: 'https://admin-api.fellesdatakatalog.digdir.no'
    description: Production
  - url: 'https://admin-api.staging.fellesdatakatalog.digdir.no'
    description: Test
  - url: 'https://admin-api.demo.fellesdatakatalog.digdir.no'
    description: Demo
paths:
  /datasources:
    get:
      tags:
        - dataSource
      summary: Query for data sources.
      description: Returns a collection of matching data sources
      operationId: getDataSources
      parameters:
        - in: query
          name: dataSourceType
          description: If you want to filter by the data source type
          required: false
          schema:
            type: string
            enum:
              - SKOS-AP-NO
              - DCAT-AP-NO
              - CPSV-AP-NO
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataSource"
  /organizations/{org}/datasources:
    post:
      tags:
        - dataSource
      summary: Create a new data source
      operationId: createDataSource
      parameters:
        - in: path
          name: org
          description: Organization Id for publisher of new data source
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: Relative location to the new data source
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSource"
    get:
      tags:
        - dataSource
      summary: Query for data sources.
      description: Returns a collection of data sources for specified organization
      operationId: getOrgDataSources
      parameters:
        - in: path
          name: org
          description: Organization Id for publisher of data sources
          required: true
          schema:
            type: string
        - in: query
          name: dataSourceType
          description: If you want to filter by the data source type
          required: false
          schema:
            type: string
            enum:
              - SKOS-AP-NO
              - DCAT-AP-NO
              - CPSV-AP-NO
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DataSource"
  /organizations/{org}/datasources/{id}:
    get:
      tags:
        - dataSource
      description: Get a specific data source by id
      operationId: getDataSourceById
      parameters:
        - in: path
          name: id
          description: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSource"
    put:
      tags:
        - dataSource
      description: Update a specific dataSource by id
      operationId: updateDataSource
      parameters:
        - in: path
          name: id
          description: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataSource"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DataSource"
    delete:
      tags:
        - dataSource
      description: Delete a specific dataSource by id
      operationId: deleteDatasource
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
  /organizations/{org}/datasources/{id}/start-harvesting:
    post:
      tags:
        - dataSource
      description: Harvest a specific dataSource by id
      operationId: harvestDatasource
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
components:
  schemas:
    DataSource:
      type: object
      description: A data source that is to be harvested
      properties:
        id:
          type: string
          description: system-generated id (GUID)
        dataSourceType:
          type: string
          enum:
            - SKOS-AP-NO
            - DCAT-AP-NO
            - CPSV-AP-NO
        dataType:
          type: string
          enum:
            - concept
            - dataset
            - informationmodel
            - dataservice
            - publicService
        url:
          type: string
          description: Link to the datasource to be harvested
        acceptHeaderValue:
          type: string
          description: Accept header value to be used when harvesting
        publisherId:
          type: string
          description: Organization id
        description:
          type: string
          description: A short description of the data source
      required:
        - publisherId
        - dataSourceType
        - dataType
        - url
